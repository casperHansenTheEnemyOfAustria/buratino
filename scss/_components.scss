#curtain {
    display: flex;
    flex-direction: column;
    width: 100vw;
    height: 15vh;
    background: $buratinoRed;
    justify-content: center;
    overflow: visible;
    position: absolute;
}

.long-button {
    position: relative;
    height: 5vh;
    width: (100vw - (414 / 32));
    align-self: center;
    background-color: $offWhite;
    box-shadow: $itemShadow;
}

// margin when needed
.longButtonTopmargin{
    margin-top: 7vh;
}


#long-button-text {
    @include subtitle;
    font-size: 18px;
}
  @media screen and (min-width: 320px) {
    #long-button-text {
      font-size: calc(18px + 6 * ((100vw - 320px) / 680));
    }
  }
  @media screen and (min-width: 1000px) {
    #long-button-text {
      font-size: 22px;
    }
  } 

button {
    cursor: pointer;
    border: none;
    outline: none;
    padding: 0;
}

// Tiles using this class are left-bound on the grid.
.tile-1 {
    @include tile-properties;
    justify-self: start;
}
    @media screen and (min-width: 320px) {
        .tile-1 {
        font-size: calc(18px + 6 * ((100vw - 320px) / 680));
        }
    }
    @media screen and (min-width: 1000px) {
        .tile-1 {
        font-size: 22px;
        }
    } 

// Tiles using this class are right-bound on the grid.
.tile-2 {
    @include tile-properties;
    justify-self: end;
}
    @media screen and (min-width: 320px) {
        .tile-2 {
        font-size: calc(18px + 6 * ((100vw - 320px) / 680));
        }
    }
    @media screen and (min-width: 1000px) {
        .tile-2 {
        font-size: 22px;
        }
    } 

#curtain-grid {
    align-self: center;
    width: (100vw - (414 / 32));
    height: inherit;
    display: grid;
    grid-template-columns: repeat(2, auto);
    justify-content: space-between;
    align-content: space-evenly;
    opacity: 0%;
}


#cover-image {
    padding-top: calc(#{$nonCurtainPadding} + 7vh);
    @include center;
    height: 75vh;
    flex-direction: column;
    gap: 5vmin;
    z-index: -20;

    img {
        max-width: 80vmin;
        z-index: -20;
    }
}

.tile-icon {
    width: 75%;
}

.tile-subtitle {
    @include reset-mp;
    @include tile-name;
}
    @media screen and (min-width: 320px) {
        .tile-subtitle {
        font-size: calc(14px + 6 * ((100vw - 320px) / 680));
        }
    }
    @media screen and (min-width: 1000px) {
        .tile-subtitle {
        font-size: 18px;
        }
    } 

// Adds a curtain ends for that snazzy look
.curtainEdge{
    position: absolute;
    width: 100vw;
    filter: drop-shadow($curtainShadow);
    bottom: -3.5vh;
    z-index: -4;
}

// Here lies all the pages for the separate tiles. The content in the sub-pages have a padding to them, as well as a lower z-index, so they'll be covered by the main curtain.
.start, .security, .sound, .light, .furniture, .cleaning, .breakers, .addons, .contact {
    padding-top:$nonCurtainPadding;
    z-index: -20;
    position: relative;
    @include center;
    flex-direction: column;
    grid-gap: 5vh;

    img {
        object-fit: contain;
        max-width: 80vw;
    }

    h5 {
        @include subtitle;
        font-size: 20px;
        max-width: (100vw - (414 / 32));
        text-align: center;
    }
      @media screen and (min-width: 320px) {
        h5 {
          font-size: calc(20px + 6 * ((100vw - 320px) / 680));
        }
      }
      @media screen and (min-width: 1000px) {
        h5 {
          font-size: 24px;
        }
      } 
    
    .redbox {
        background-color: $buratinoRed;
        width: (100vw - (414 / 32));
        height: (37vw - (414 / 32));
        filter: drop-shadow($boxShadow);
        @include center;
        flex-direction: column;

    
        h6 {
            @include subtitle;
            color: #FFFFFF;
            font-size: 20px;
            text-align: center;
        }
          @media screen and (min-width: 320px) {
            h6 {
              font-size: calc(20px + 6 * ((100vw - 320px) / 680));
            }
          }
          @media screen and (min-width: 1000px) {
            h6 {
              font-size: 24px;
            }
          } 
        }
        .redbox-mixer {
            background-color: $buratinoRed;
            width: (100vw - (414 / 32));
            height: (65vw - (414 / 32));
            filter: drop-shadow($boxShadow);
            @include center;
            flex-direction: column;
            justify-content: space-around;
            
            img {
                max-width: 45vw;
            }

            h6 {
                @include subtitle;
                color: #FFFFFF;
                font-size: 18px;
                text-align: center;
            }
              @media screen and (min-width: 320px) {
                h6 {
                  font-size: calc(18px + 6 * ((100vw - 320px) / 680));
                }
              }
              @media screen and (min-width: 1000px) {
                h6 {
                  font-size: 22px;
                }
              } 
        }
        
}

.start-prompt{
  z-index: -2;
  position:fixed;
  margin-bottom: 80vh !important;
  margin-left: 55vw !important;
  transform: rotate(-30deg);
  animation: startFade 0s 5s forwards;
  animation-timing-function: ease-in-out;
  animation-duration: 500ms;
  opacity: 0%;
}

@keyframes startFade {
  from {
    opacity: 0%;
  }
  to {
    opacity: 100%;
  }
}

.curtain-string {
  position: absolute;
  bottom: -20vh;
  align-self: center;
  width: 15vmin;
  z-index: -14;
  filter: drop-shadow($curtainShadow);
}

#slide-box {
  z-index: 2;
  height:36vh;
  position:fixed;
  width:100vw;
  // background-color: rgba($color: #a73d3d, $alpha: .5);
}

// Used by all overlays in the app.
.overlay{
  position:absolute;
  flex-direction: column;
  z-index: 4 !important;
  display: flex;
  width: 80vmin;
  background-color: white;
  filter: drop-shadow($itemShadow);
  top: 5vh;
  padding: 1em;
  margin-bottom: 1em;
  animation-name: tile-fadein;
  animation-duration: 250ms;

  // The header title for the overlay.
  h6 {
    @include subtitle;
    line-height: 22px;
    padding-bottom: 1em;
  }

  // The general text inside the overlay.
  p {
    @include reset-mp;
    font-weight: 600;
    line-height: 22px;
  }
  li {
    @include reset-mp;
    font-weight: 600;
    line-height: 22px;
    list-style-type: disc;
    list-style-position: inside;
    text-indent: -1em;
    padding-left: 1em;
    }
}

// thing to make pages work as intended
.bring-forward{
  z-index: 1 ; 
}

// settings for the background fade layer
.ovlBackground{
  backdrop-filter: blur(25px);
  background-color: rgba($color: #000000, $alpha: .25);
  width: 100vw;
  height: 500vh;
  position: fixed;
  z-index: 3 !important;
  @include reset-mp;
  animation-name: tile-fadein;
  animation-duration: 250ms;
}
.wifi-ovl{
  top: 33vh;
  left: 5vw;
}
.wifi{
  position: absolute;
  z-index: 3;
  top:0;
}

.xclose{
  margin-left:auto;
}

.map-ovl{
  // height: 87vh;
}


// table dimesons are currently WITH the margin wanted by mattias
// relative dimensions without margin: w:0.8m L: 2m
// margin: 0.1m
// maybe add an image or something with illusrtations of the margin
.table{
  position: absolute;
  margin-top: 60vh;
  margin-left: 70vw;
  width: 10.834vw;
  height: 19.738vw;
  background-image: url(../img/unselected-table.svg);
  background-repeat: no-repeat;
  background-position-x: center;
  background-position-y: center;
  display:flex;
  text-align: center;
}

.table p{
  margin-left: 1px;
  font-size: 0.6em;
}

// this is my stupid solution for rotating tables as i cannot use the tranform porperty
// if you change the height/width of the table make sure to change these to that but reversed
.rotated-table{
  width: 19.738vw;
  height: 10.834vw;
  background-image: url(../img/unselected-table-rotated.svg);
}




// these are for the buttons that rotate the tables around
.rotation-wrapper{
  position: relative;
  margin-top: 15vh;
  z-index:-2;
}
.rotators{
  position: relative;
  width: 35vw;
  height: 3em;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.horizontal{
  background-color: rgba($color: #CB0000, $alpha: 1);
  background-image: url("../img/table-horizontal.svg");
  background-repeat: no-repeat;
  width:3em;
  height: 3em;
}
.vertical{
  background-color: rgba($color: #CB0000, $alpha: 1);
  background-image: url("../img/table-vertical.svg");
  background-repeat: no-repeat;
  width:3em;
  height: 3em;
}

.vertical, .horizontal{
  filter: drop-shadow($itemShadow);
}


// defining the size of the map to make relative sizing of tables correct
.map{
  position: relative;
  z-index: -2;
  width:78vw;
  margin-left: auto;
  margin-right: auto;
}

.warning{
  @include subtitle-warning;
  color: #CB0000 !important;
  position:absolute;
  z-index: 23;
  top:3vh;
}

.yt-wrapper{
  width: (100vw - (414 / 32));
}

.yt-player{
  position:relative;
	padding-bottom:56.25%;
	padding-top:30px;
	height:0;
	overflow:hidden;
  
}

.yt-player iframe, .yt-player object , .yt-player embed{
  position:absolute;
	top:0;
	left:0;
	width:100%;
	height:100%;
}

