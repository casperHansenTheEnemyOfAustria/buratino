#curtain {
    display: flex;
    flex-direction: column;
    width: 100vw;
    height: 90vh;
    background: $buratinoRed;
    justify-content: center;
    overflow: visible;
    position: absolute;
    top: -75vh;
    will-change: transform;
}

.long-button {
    position: relative;
    
    height: 5vmax;
    width: (100vw - (414 / 32));
    align-self: center;
    background-color: $offWhite;
    box-shadow: $itemShadow;
}

.long-button-hidden{
  background-color: rgba($color: #cb0000, $alpha: 1.0) !important;
  box-shadow:none;
  
}
/*.long-button-big-text{
  @include subtitle;
  font-size: 36px !important;
  letter-spacing: 0.25rem;
  color:#FFFFFF;
  filter: drop-shadow(4px 4px 2px rgba(0,0,0, 0.35)) !important;
}
@media screen and (min-width: 320px) {
  .long-button-big-text {
    font-size: calc(36px + 4 * ((100vw - 320px) / 680)) !important;
  }
}
@media screen and (min-width: 1000px) {
  .long-button-big-text {
    font-size: 40px !important;
  }
} 
*/
// margin when needed
.longButtonTopmargin{
    top: 39.5vh;
}




.long-button-text {
    @include subtitle;
    font-size: 18px;
}
  @media screen and (min-width: 320px) {
    .long-button-text {
      font-size: calc(18px + 4 * ((100vw - 320px) / 680));
    }
  }
  @media screen and (min-width: 1000px) {
    .long-button-text {
      font-size: 22px;
    }
  } 

button {
    cursor: pointer;
    border: none;
    outline: none;
    padding: 0;
    background-color: transparent;
}

// Tiles using this class are left-bound on the grid.
.tile-1 {
    @include tile-properties;
    justify-self: start;
}
    @media screen and (min-width: 320px) {
        .tile-1 {
        font-size: calc(18px + 4 * ((100vw - 320px) / 680));
        width: $tileSize - 3vmin;
        height: $tileSize - 3vmin;
        }
    }
    @media screen and (min-width: 380px) {
        .tile-1 {
        font-size: calc(18px + 4 * ((100vw - 320px) / 680));
        width: $tileSize;
        height: $tileSize;
        }
    }
    @media screen and (min-width: 700px) {
      .tile-1 {
        width: $tileSize - 10vmin;
        height: $tileSize - 10vmin;
      }
    }
    @media screen and (min-width: 1000px) {
        .tile-1 {
        font-size: 22px;
        width: $tileSize - 12.5vmin;
        height: $tileSize - 12.5vmin;
        }
    } 

// Tiles using this class are right-bound on the grid.
.tile-2 {
    @include tile-properties;
    justify-self: end;
}
    @media screen and (min-width: 320px) {
        .tile-1 {
        font-size: calc(18px + 4 * ((100vw - 320px) / 680));
        width: $tileSize - 3vmin;
        height: $tileSize - 3vmin;
        }
    }
    @media screen and (min-width: 380px) {
      .tile-1 {
      font-size: calc(18px + 4 * ((100vw - 320px) / 680));
      width: $tileSize;
      height: $tileSize;
      }
  }
    @media screen and (min-width: 700px) {
      .tile-2 {
        width: $tileSize - 10vmin;
        height: $tileSize - 10vmin;
      }
    }
    @media screen and (min-width: 1000px) {
        .tile-2 {
        font-size: 22px;
        width: $tileSize - 12.5vmin;
        height: $tileSize - 12.5vmin;
        }
    } 

#curtain-grid {
    align-self: center;
    width: (100vw - (414 / 32));
    height: inherit;
    display: grid;
    grid-template-columns: repeat(2, auto);
    justify-content: space-between;
    align-content: space-evenly;
    opacity: 0%;
}
@media screen and (min-width: 320px) {
  #curtain-grid {
    grid-template-columns: repeat(2, auto);
  }
}
@media screen and (min-width: 700px) {
  #curtain-grid {
    grid-template-columns: repeat(2, auto);
    width: (100vw - (414 / 16));
  }
}
@media screen and (min-width: 1000px) {
  #curtain-grid {
    grid-template-columns: repeat(4, auto);
    width: (100vw - (414 / 32));
  }
} 


#cover-image {
    padding-top: calc(#{$nonCurtainPadding} + 7vh);
    @include center-flex;
    height: 75vh;
    flex-direction: column;
    gap: 5vmin;
    z-index: -20;

    img {
        max-width: 75vmin;
        z-index: -20;
        overflow: visible;
    }
    @media screen and (min-width: 1000px) {
      img {
        max-width: 40vmin;
      }
    } 
}
@media screen and (min-width: 1025px) {
  #cover-image {
    padding-top: $nonCurtainPadding;
  }
} 

.tile-icon {
    width: 75%;
}

.tile-subtitle {
    @include reset-mp;
    @include tile-name;
}
    @media screen and (min-width: 320px) {
        .tile-subtitle {
        font-size: calc(14px + 6 * ((100vw - 320px) / 680));
        }
    }
    @media screen and (min-width: 1000px) {
        .tile-subtitle {
        font-size: 18px;
        }
    } 

// Adds a curtain ends for that snazzy look
.curtainEdge{
    position: absolute;
    width: 100vw;
    filter: drop-shadow($curtainShadow);
    bottom: -4vmax;
    z-index: -4;
}

// Here lies all the pages for the separate tiles. The content in the sub-pages have a padding to them, as well as a lower z-index, so they'll be covered by the main curtain.
.start, .security, .sound, .light, .furniture, .cleaning, .breakers, .addons, .contact {
    padding-top:$nonCurtainPadding;
    z-index: -20;
    position: relative;
    display: grid;
    @include center-grid;
    gap: 5vh;

    img {
        object-fit: contain;
        max-width: $boxWidth;
        overflow: visible;
    }

    h5 {
        @include subtitle;
        font-size: 20px;
        max-width: $boxWidth;
        text-align: center;
    }
      @media screen and (min-width: 320px) {
        h5 {
          font-size: calc(20px + 6 * ((100vw - 320px) / 680));
        }
      }
      @media screen and (min-width: 1000px) {
        h5 {
          font-size: 24px;
        }
      } 
    
    .redbox {
        background-color: $buratinoRed;
        width: $boxWidth;
        height: $boxHeight;
        box-shadow: $boxShadow;
        @include center-flex;
        flex-direction: column;

    
        h6 {
            @include subtitle;
            color: #FFFFFF;
            font-size: 20px;
            text-align: center;
        }
          @media screen and (min-width: 320px) {
            h6 {
              font-size: calc(20px + 4 * ((100vw - 320px) / 680));
            }
          }
          @media screen and (min-width: 1000px) {
            h6 {
              font-size: 24px;
            }
          } 
        }
        .redbox-mixer {
            background-color: $buratinoRed;
            width: $boxWidth;
            height: $boxHeight;
            box-shadow: $boxShadow;
            @include center-grid;
            justify-content: space-around;
            cursor: pointer;
            border: none;
            outline: none;
            padding: 0;
            text-decoration: none;
            gap: 1em;
            padding-top: 1em;
            padding-bottom: 3em;
            img {
              min-width: 0vmin;
              max-width: 20vmin;
            }
            @media screen and (min-width: 320px) {
              img {
                min-width: 10vmin;
                max-width: 25vmin;
              }
            }
            @media screen and (min-width: 1000px) {
              img {
                min-width: 20vmin;
                max-width: 45vmin;
              }
            } 

            h6 {
                @include subtitle;
                color: #FFFFFF;
                font-size: 18px;
                text-align: center;
            }
              @media screen and (min-width: 320px) {
                h6 {
                  font-size: calc(18px + 4 * ((100vw - 320px) / 680));
                }
              }
              @media screen and (min-width: 1000px) {
                h6 {
                  font-size: 22px;
                }
              } 
        }
        
}

.start-prompt{
  z-index: -2;
  position: absolute;
  bottom: 74vh;
	left: 60vw;
  transform: rotate(-30deg);
  animation: startFade 0s 5s forwards;
  animation-timing-function: $cubicAnimation;
  animation-duration: 500ms;
  opacity: 0%;
}

@keyframes startFade {
  from {
    opacity: 0%;
  }
  to {
    opacity: 100%;
  }
}

.curtain-string {
  position: absolute;
  bottom: -25vh;
  align-self: center;
  width: 15vmin;
  height: 30vh;
  z-index: -14;
  filter: drop-shadow($curtainShadow);
}
@media screen and (min-width: 320px) {
  .curtain-string {
    width: 15vmin;
  }
}
@media screen and (min-width: 1000px) {
  .curtain-string {
    width: 10vmin;
  }
} 

#slide-box {
  z-index: 2;
  height:34vh;
  position:absolute;
  width:100vw;
  // background-color: rgba($color: #a73d3d, $alpha: .5);
}

// Used by all overlays in the app.
.overlay{
  position:absolute;
  flex-direction: column;
  z-index: 4 !important;
  display: flex;
  width: 80vmin;
  background-color: white;
  box-shadow: $itemShadow;
  top: 5vh;
  padding: 1em;
  margin-bottom: 1em;
  animation-name: tile-fadein;
  animation-duration: 250ms;
  animation-timing-function: $cubicAnimation;

  // The header title for the overlay.
  h6 {
    @include subtitle;
    font-size: 22px;
    line-height: 22px;
    padding-bottom: 1rem;
  }
  @media screen and (min-width: 320px) {
    h6 {
      font-size: calc(22px + 4 * ((100vw - 320px) / 680));
    }
  }
  @media screen and (min-width: 1000px) {
    h6 {
      font-size: 26px;
    }
  } 


  // The general text inside the overlay.
  p {
    @include reset-mp;
    padding-right: 1em;
    font-weight: 600;
    line-height: 1.5;
    font-size: 18px;
    color: $textColor;
  }
  @media screen and (min-width: 320px) {
    p {
      font-size: calc(18px + 4 * ((100vw - 320px) / 680));
    }
  }
  @media screen and (min-width: 1000px) {
    p {
      font-size: 22px;
    }
  } 

  li {
    @include reset-mp;
    font-weight: 600;
    line-height: 1.4;
    list-style-type: disc;
    list-style-position: inside;
    text-indent: -1em;
    padding-left: 1em;
    font-size: 18px;
    color: $textColor;
    }
    @media screen and (min-width: 320px) {
      li {
        font-size: calc(18px + 4 * ((100vw - 320px) / 680));
      }
    }
    @media screen and (min-width: 1000px) {
      li {
        font-size: 22px;
      }
    } 
}

// thing to make pages work as intended
.bring-forward{
  z-index: 1 ; 
}

// settings for the background fade layer
.ovlBackground{
  backdrop-filter: blur(12px);
  background-color: rgba($color: #000000, $alpha: .25);
  width: 100vw;
  height: 500vh;
  position: fixed;
  top: -24px;
  z-index: 3 !important;
  @include reset-mp;
  animation-name: tile-fadein;
  animation-duration: 250ms;
  animation-timing-function: $cubicAnimation;
  
}

.wifi{
  z-index: 3;
  @include center-flex;
}

.xclose{
  z-index: 5;
  position: relative;
  margin-left:auto;
}

/*
.map-ovl{
  height: 87vh;
}
*/

// table dimesons are currently WITH the margin wanted by mattias
// relative dimensions without margin: w:0.8m L: 2m
// margin: 0.1m
// maybe add an image or something with illusrtations of the margin
.sqtable{
  position: absolute;
  margin-top: 125vw;
  margin-left: 47vw;
  width: 14.6666667vw;
  height: 15vw;
  background-image: url(../img/unselected-table.svg);
  background-repeat: no-repeat;
  background-position-x: center;
  background-position-y: center;
  background-size: contain;
  display:flex;
  text-align: center;
  overflow: visible;
}
@media screen and (min-width: 768px){
  .sqtable{ 
  margin-top: 80vw;
  margin-left: 30vw;
}
}
.rtable{
  position: absolute;
  width: 10vw;
  height:10vw;
  background-color: rgba($color:#999999, $alpha: 1.0);
  border-radius: 5vw;
  margin-top: 126vw;
  margin-left: 65vw;
}
@media screen and (min-width: 768px){
  .rtable{ 
  margin-top: 82vw;
  margin-left: 46vw;
}
}

.table p{
  margin-left: 1px;
  font-size: 0.6em;
}

// this is my stupid solution for rotating tables as i cannot use the tranform porperty
// if you change the height/width of the table make sure to change these to that but reversed
.sqtable.rotated-table{
  width: 15vw;
  height: 14.666667vw;
  background-image: url(../img/unselected-table-rotated.svg);
  overflow: visible;
}

.map-message{
  width: 80vmin;
  position: absolute;
  z-index: 4000;
  background-color: #FFFFFF;
}


// these are for the buttons that rotate the tables around

.operator-wrapper {
  @include center-grid;
  justify-content: space-around;
  position: relative;
  margin-top: 10vh;
  z-index:-2;
  grid-auto-flow: column;
  width: 80vmin;
  opacity: 0.87;

  button {
    align-items: center;
  }
}

.rotator-caption {
  padding: 0 !important;
  width: min-content;
  text-align: center;
  font-weight: 600;
  line-height: 1.1 !important;
  font-size: 14px !important;
  color: $textColor;
}
@media screen and (min-width: 320px) {
  .rotator-caption {
    font-size: calc(14px + 4 * ((100vw - 320px) / 680)) !important;
  }
}
@media screen and (min-width: 1000px) {
  .rotator-caption {
    font-size: 18px !important;
  }
}


// defining the size of the map to make relative sizing of tables correct
.map{
  position: relative;
  z-index: -2;
  width:78vw;
  margin-left: auto;
  margin-right: auto;
  overflow: visible;
  max-width: 80vmin !important;
  margin-top: 2em;
}
.map-desc{
  position: absolute;
  max-width: 70vmin !important;
  
  top: 1.2em;
  font-size: calc(23px + 6 * ((100vw - 320px) / 680)) !important;
  text-align: left !important;
}

.table16.restricted{
  position: absolute;
  z-index: -3;
  width: 11vw;
  height: 20vw;
  top:4.5em;
  right:7vw;
}

@media screen and (min-width: 1024px){
  .table16.restricted{
    left:51vw;
    top:8vw;
    width: 8vw;
    height: 13vw;
  }
}

@media screen and (min-width: 1024px) and (min-height:1366px){
  .table16.restricted{
    left:67vw;
    top:10vw;
    width: 10vw;
    height: 16vw;
  }
}
.table21.restricted{
  position: absolute;
  width: 14vw;
  height: 20vw;
  top: 85vw;
  left:2em;
}
@media screen and (min-width: 1024px){
  .table21.restricted{
    left:3vw;
    top:60vw;
    width: 11vw;
    height: 16vw;
  }
}

@media screen and (min-width: 1024px) and (min-height:1366px){
  .table21.restricted{
    left:6vw;
    top:74vw;
    width: 12vw;
    height: 20vw;
  }
}

.table22.restricted{
  position: absolute;
  width: 14vw;
  height: 20vw;
  top: 85vw;
  left: 67vw;
}

@media screen and (min-width: 1024px){
  .table22.restricted{
    left:47vw;
    top:60vw;
    width: 11vw;
    height: 16vw;
  }
}

@media screen and (min-width: 1024px) and (min-height:1366px){
  .table22.restricted{
    left:65vw;
    top:74vw;
    width: 12vw;
    height: 20vw;
  }
}
.warning{
  @include subtitle-warning;
  max-width: 70vmin !important;
  position: absolute;
  color: #CB0000 !important;
  top:1.2em;
  z-index: -14;
  
  text-align: left !important;
}
@media screen and (min-width: 320px) {
  .warning{
    font-size: calc(20px + 4 * ((100vw - 320px) / 680)) !important;
  }
}
@media screen and (min-width: 1000px) {
  .warning{
    font-size: 22px !important;
  }
} 

.yt-wrapper{
  width: $boxWidth;
}

.yt-player{
  position:relative;
	width: $boxWidth;
  height: $boxWidth * 0.5625;
  overflow:hidden;
  box-shadow: $boxShadow;
}

.yt-player iframe, .yt-player object , .yt-player embed{
  position:absolute;
  z-index: 2 !important;
	top:0;
	left:0;
	width:100%;
	height:100%;
}

.thumbnail{
  background-color: $buratinoRed;
  width: $boxWidth;
  height: $boxWidth * 0.5625;
  
  @include center-flex;
  flex-direction: column;
  top: 0;
  z-index: -30;
  position:absolute;
  
  img {
    width: 20vmin;
  }
  h5 {
    color: #FFFFFF;
  }
}
¨


button:active{
  -webkit-box-shadow: inset 10px 10px 54px -17px rgba(0,0,0,0.75);
  -moz-box-shadow: inset 10px 10px 54px -17px rgba(0,0,0,0.75);
  box-shadow: inset 10px 10px 54px -17px rgba(0,0,0,0.75);
}


footer{
  @include reset-mp;
  color: rgba($color: #000000, $alpha: .5);
  font-size: 0.9em;
}

.swipe-up{
  position: absolute;
  z-index: -3;
  background-color: rgba($color: #000000, $alpha: 0);
  width: 87vw;
  height: 25vh;
  top: 67%;
  left: auto;
  right: auto;
}